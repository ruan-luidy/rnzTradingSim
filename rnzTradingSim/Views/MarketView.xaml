<UserControl
  x:Class="rnzTradingSim.Views.MarketView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:hc="https://handyorg.github.io/handycontrol"
  xmlns:local="clr-namespace:rnzTradingSim.Views"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:vm="clr-namespace:rnzTradingSim.ViewModels"
  d:DataContext="{d:DesignInstance Type=vm:MarketViewModel}"
  d:DesignHeight="800"
  d:DesignWidth="1150"
  Background="{DynamicResource DarkOpacityBrush}"
  mc:Ignorable="d">

  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>

    <!--  Header  -->
    <Border Grid.Row="0" Padding="40,30,40,20">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="0">
          <TextBlock
            Foreground="White"
            Style="{StaticResource TextBlockLargeBold}"
            Text="Market" />
          <TextBlock
            Margin="0,5,0,0"
            Foreground="{DynamicResource SecondaryTextBrush}"
            Style="{StaticResource TextBlockDefault}"
            Text="Discover coins, track performance, and find your next investment" />
        </StackPanel>

        <StackPanel Grid.Column="1" Orientation="Horizontal">
          <Button
            Width="40"
            Height="40"
            Margin="0,0,10,0"
            hc:BorderElement.CornerRadius="8"
            Background="{DynamicResource RegionBrush}"
            BorderBrush="{DynamicResource BorderBrush}"
            Command="{Binding RefreshCommand}">
            <StackPanel Orientation="Horizontal">
              <Image
                Width="16"
                Height="16"
                VerticalAlignment="Center"
                Source="{StaticResource Refresh}" />
            </StackPanel>
          </Button>
        </StackPanel>
      </Grid>
    </Border>

    <!--  API Status  -->
    <Border Grid.Row="1" Padding="40,0,40,15">
      <Border
        Padding="12,8"
        HorizontalAlignment="Left"
        Background="#1a1a1a"
        BorderBrush="#333333"
        BorderThickness="1"
        CornerRadius="6">
        <StackPanel Orientation="Horizontal">
          <Border
            Width="8"
            Height="8"
            Margin="0,0,8,0"
            Background="#00ff88"
            CornerRadius="4" />
          <TextBlock
            FontSize="12"
            Foreground="#cccccc"
            Text="{Binding ApiStatusText}" />
        </StackPanel>
      </Border>
    </Border>

    <!--  Search and Filters  -->
    <Border Grid.Row="2" Padding="40,0,40,30">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <!--  Search Box  -->
        <hc:SearchBar
          Grid.Column="0"
          Width="400"
          HorizontalAlignment="Left"
          hc:BorderElement.CornerRadius="8"
          hc:InfoElement.Placeholder="Search coins by name or symbol..."
          Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" />

        <!--  Filters Button  -->
        <Button
          Grid.Column="1"
          Height="32"
          Padding="15,0"
          hc:BorderElement.CornerRadius="8"
          Background="{DynamicResource RegionBrush}"
          BorderBrush="{DynamicResource BorderBrush}"
          BorderThickness="1"
          Command="{Binding ShowFiltersCommand}"
          Content="Filters" />
      </Grid>
    </Border>

    <!--  Loading Indicator  -->
    <Grid Grid.Row="3" Visibility="{Binding IsLoading, Converter={StaticResource Boolean2VisibilityConverter}}">
      <hc:LoadingCircle
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        IsRunning="{Binding IsLoading}"
        Style="{StaticResource LoadingCircleLarge}" />
    </Grid>

    <!--  Market Data - Sem borda externa  -->
    <Grid
      Grid.Row="3"
      Margin="40,0,40,40"
      Visibility="{Binding IsLoading, Converter={StaticResource Boolean2VisibilityReConverter}}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>

      <!--  Results Info  -->
      <TextBlock
        Grid.Row="0"
        Margin="0,0,0,20"
        FontSize="14"
        Foreground="{DynamicResource SecondaryTextBrush}"
        Text="{Binding ResultsText}" />

      <!--  Coins Grid Cards  -->
      <ScrollViewer
        Grid.Row="1"
        HorizontalScrollBarVisibility="Disabled"
        VerticalScrollBarVisibility="Auto">
        <ItemsControl ItemsSource="{Binding FilteredCoins}">
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <UniformGrid Columns="4" />
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <Border
                Margin="10"
                Padding="20"
                Background="{DynamicResource RegionBrush}"
                CornerRadius="12"
                Effect="{StaticResource EffectShadow5}"
                Style="{StaticResource BorderRegion}">
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>

                  <!--  Coin Info com Rank  -->
                  <StackPanel Grid.Row="0" Margin="0,0,0,15">
                    <StackPanel Orientation="Horizontal">
                      <!--  Gravatar do HandyControl  -->
                      <hc:Gravatar
                        Width="50"
                        Height="50"
                        Margin="0,0,10,0"
                        VerticalAlignment="Center"
                        hc:BorderElement.CornerRadius="50"
                        Background="{DynamicResource DarkOpacityBrush}"
                        Id="{Binding Symbol}" />

                      <!--  Nome, Symbol e Rank na mesma área  -->
                      <StackPanel VerticalAlignment="Center">
                        <!--  Nome e Rank na mesma linha  -->
                        <StackPanel Margin="0,0,0,2" Orientation="Horizontal">
                          <TextBlock
                            VerticalAlignment="Center"
                            FontSize="16"
                            FontWeight="Medium"
                            Text="{Binding Name}"
                            TextTrimming="CharacterEllipsis" />

                          <!--  Rank Badge  -->
                          <Border
                            Margin="8,0,0,0"
                            Padding="6,2"
                            VerticalAlignment="Center"
                            Background="#333333"
                            CornerRadius="8">
                            <TextBlock
                              FontSize="10"
                              FontWeight="Bold"
                              Foreground="{DynamicResource SecondaryTextBrush}"
                              Text="{Binding Rank}" />
                          </Border>
                        </StackPanel>

                        <!--  Symbol  -->
                        <TextBlock
                          FontSize="11"
                          Foreground="{DynamicResource SecondaryTextBrush}"
                          Text="{Binding Symbol}" />
                      </StackPanel>
                    </StackPanel>
                  </StackPanel>

                  <!--  Price  -->
                  <StackPanel Grid.Row="1" Margin="0,0,0,12">
                    <TextBlock
                      FontSize="24"
                      FontWeight="Bold"
                      Foreground="White"
                      Text="{Binding Price}" />

                    <!--  24h Change com HOT/WILD Badge  -->
                    <StackPanel Orientation="Horizontal">
                      <!--  Badge de % de mudança  -->
                      <Border
                        Padding="6,3"
                        HorizontalAlignment="Left"
                        CornerRadius="4">
                        <Border.Style>
                          <Style TargetType="Border">
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding IsPositiveChange}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SuccessBrush}" />
                              </DataTrigger>
                              <DataTrigger Binding="{Binding IsPositiveChange}" Value="False">
                                <Setter Property="Background" Value="{DynamicResource DangerBrush}" />
                              </DataTrigger>
                            </Style.Triggers>
                          </Style>
                        </Border.Style>

                        <TextBlock
                          FontSize="12"
                          FontWeight="Medium"
                          Foreground="{DynamicResource PrimaryTextBrush}"
                          Text="{Binding Change24h}">
                          <TextBlock.Style>
                            <Style BasedOn="{StaticResource TextBlockDefault}" TargetType="TextBlock">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding IsPositiveChange}" Value="True">
                                  <Setter Property="Foreground" Value="{DynamicResource SuccessBrush}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsPositiveChange}" Value="False">
                                  <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </TextBlock.Style>
                        </TextBlock>
                      </Border>

                      <!--  Hot/Wild Badge ao lado  -->
                      <Border
                        Margin="8,0,0,0"
                        Padding="6,3"
                        CornerRadius="4"
                        Visibility="{Binding HasBadge, Converter={StaticResource Boolean2VisibilityConverter}}">
                        <Border.Style>
                          <Style BasedOn="{StaticResource BorderRegion}" TargetType="Border">
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding IsHot}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SecondaryBrush}" />
                              </DataTrigger>
                              <DataTrigger Binding="{Binding IsWild}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource DangerBrush}" />
                              </DataTrigger>
                            </Style.Triggers>
                          </Style>
                        </Border.Style>
                        <StackPanel Orientation="Horizontal">
                          <Image
                            Width="10"
                            Height="10"
                            VerticalAlignment="Center">
                            <Image.Style>
                              <Style TargetType="Image">
                                <Style.Triggers>
                                  <DataTrigger Binding="{Binding IsHot}" Value="True">
                                    <Setter Property="Source" Value="{StaticResource ChartLine}" />
                                  </DataTrigger>
                                  <DataTrigger Binding="{Binding IsWild}" Value="True">
                                    <Setter Property="Source" Value="{StaticResource Rocket}" />
                                  </DataTrigger>
                                </Style.Triggers>
                              </Style>
                            </Image.Style>
                          </Image>
                          <TextBlock
                            Margin="4,0,0,0"
                            FontSize="10"
                            FontWeight="Bold"
                            Foreground="White"
                            Text="{Binding BadgeText}" />
                        </StackPanel>
                      </Border>
                    </StackPanel>
                  </StackPanel>

                  <!--  Market Data  -->
                  <StackPanel Grid.Row="2" Margin="0,0,0,8">
                    <!--  Market Cap  -->
                    <Grid Margin="0,0,0,8">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <TextBlock
                        Grid.Column="0"
                        FontSize="12"
                        Foreground="{DynamicResource SecondaryTextBrush}"
                        Text="Market Cap" />
                      <TextBlock
                        Grid.Column="1"
                        FontSize="12"
                        FontWeight="Medium"
                        Foreground="White"
                        Text="{Binding MarketCap}" />
                    </Grid>

                    <!--  Volume 24h  -->
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <TextBlock
                        Grid.Column="0"
                        FontSize="12"
                        Foreground="{DynamicResource SecondaryTextBrush}"
                        Text="Volume (24h)" />
                      <TextBlock
                        Grid.Column="1"
                        FontSize="12"
                        FontWeight="Medium"
                        Foreground="White"
                        Text="{Binding Volume24hFormatted}" />
                    </Grid>
                  </StackPanel>

                </Grid>
              </Border>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </ScrollViewer>

      <!--  Pagination  -->
      <Grid Grid.Row="2" Margin="0,20,0,0">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <Button
          Grid.Column="0"
          Width="80"
          Height="32"
          hc:BorderElement.CornerRadius="8"
          Command="{Binding PreviousPageCommand}"
          Content="Previous"
          IsEnabled="{Binding CanGoPreviousPage}" />

        <StackPanel
          Grid.Column="1"
          HorizontalAlignment="Center"
          Orientation="Horizontal">
          <Button
            Width="32"
            Height="32"
            Margin="2"
            hc:BorderElement.CornerRadius="8"
            Command="{Binding GoToPageCommand}"
            CommandParameter="1"
            Content="1">
            <Button.Style>
              <Style BasedOn="{StaticResource ButtonDefault}" TargetType="Button">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding CurrentPage}" Value="1">
                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </Button.Style>
          </Button>

          <Button
            Width="32"
            Height="32"
            Margin="2"
            hc:BorderElement.CornerRadius="8"
            Command="{Binding GoToPageCommand}"
            CommandParameter="2"
            Content="2">
            <Button.Style>
              <Style BasedOn="{StaticResource ButtonDefault}" TargetType="Button">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding CurrentPage}" Value="2">
                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </Button.Style>
          </Button>

          <Button
            Width="32"
            Height="32"
            Margin="2"
            hc:BorderElement.CornerRadius="8"
            Command="{Binding GoToPageCommand}"
            CommandParameter="3"
            Content="3">
            <Button.Style>
              <Style BasedOn="{StaticResource ButtonDefault}" TargetType="Button">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding CurrentPage}" Value="3">
                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </Button.Style>
          </Button>

          <Button
            Width="32"
            Height="32"
            Margin="2"
            hc:BorderElement.CornerRadius="8"
            Command="{Binding GoToPageCommand}"
            CommandParameter="4"
            Content="4">
            <Button.Style>
              <Style BasedOn="{StaticResource ButtonDefault}" TargetType="Button">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding CurrentPage}" Value="4">
                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </Button.Style>
          </Button>

          <TextBlock
            Margin="10,0"
            VerticalAlignment="Center"
            FontSize="14"
            Foreground="{DynamicResource SecondaryTextBrush}"
            Text="..." />

          <Button
            Width="32"
            Height="32"
            Margin="2"
            hc:BorderElement.CornerRadius="8"
            Command="{Binding GoToPageCommand}"
            CommandParameter="5"
            Content="5" />
        </StackPanel>

        <Button
          Grid.Column="2"
          Width="80"
          Height="32"
          hc:BorderElement.CornerRadius="8"
          Command="{Binding NextPageCommand}"
          Content="Next"
          IsEnabled="{Binding CanGoNextPage}" />
      </Grid>
    </Grid>
  </Grid>
</UserControl>