<UserControl
  x:Class="rnzTradingSim.Views.Games.MinesView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:hc="https://handyorg.github.io/handycontrol"
  xmlns:local="clr-namespace:rnzTradingSim.Views.Games"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  d:DesignHeight="600"
  d:DesignWidth="1070"
  mc:Ignorable="d">

  <Grid Margin="20" HorizontalAlignment="Center">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="Auto" />
    </Grid.ColumnDefinitions>

    <!--  Game Title  -->
    <StackPanel
      Grid.Row="0"
      Margin="0,0,0,20"
      HorizontalAlignment="Left">
      <TextBlock
        Margin="0,0,0,10"
        HorizontalAlignment="Left"
        FontWeight="Bold"
        Style="{StaticResource TextBlockLargeBold}"
        Text="Minas" />
      <TextBlock
        HorizontalAlignment="Left"
        Foreground="{DynamicResource SecondaryTextBrush}"
        Style="{StaticResource TextBlockSubTitle}"
        Text="Navegue pelo campo minado e retire seus ganhos antes de acertar uma mina!"
        TextWrapping="Wrap" />
    </StackPanel>

    <!--  Main Game Area  -->
    <Border
      Grid.Row="1"
      Padding="20"
      HorizontalAlignment="Center"
      VerticalAlignment="Center"
      Background="Transparent"
      CornerRadius="20"
      Style="{StaticResource BorderRegion}">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="400" />
        </Grid.ColumnDefinitions>

        <!--  Left Side - Mine Grid Area  -->
        <Grid Grid.Column="0" Margin="0,0,30,0">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>

          <!--  Balance Display  -->
          <StackPanel
            Grid.Row="0"
            Margin="0,0,0,10"
            HorizontalAlignment="Center">
            <TextBlock
              Margin="0,0,0,5"
              HorizontalAlignment="Center"
              Foreground="{DynamicResource SecondaryTextBrush}"
              Style="{StaticResource TextBlockSubTitle}"
              Text="Saldo" />
            <TextBlock
              HorizontalAlignment="Center"
              Style="{StaticResource TextBlockTitleBold}"
              Text="{Binding PlayerBalance, Converter={StaticResource AbbreviatedCurrencyConverter}}" />
          </StackPanel>

          <!--  Mine Grid  -->
          <Border
            Grid.Row="1"
            Background="{DynamicResource RegionBrush}"
            CornerRadius="20"
            Style="{StaticResource BorderRegion}">
            <UniformGrid
              Name="MineGrid"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Columns="5"
              Rows="5">
              <!--  Grid will be populated programmatically  -->
            </UniformGrid>
          </Border>
        </Grid>

        <!--  Right Panel - Game Controls  -->
        <StackPanel Grid.Column="1">

          <!--  Number of Mines Control  -->
          <StackPanel
            Grid.Row="0"
            Margin="0,0,0,20"
            HorizontalAlignment="Left">
            <TextBlock
              Margin="0,0,0,10"
              HorizontalAlignment="Left"
              Style="{StaticResource TextBlockSubTitleBold}"
              Text="Número de Minas" />

            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>

              <Button
                Grid.Column="0"
                Height="32"
                hc:BorderElement.CornerRadius="8"
                hc:IconElement.Geometry="{StaticResource SubGeometry}"
                hc:IconElement.Width="15"
                BorderBrush="Transparent"
                Command="{Binding DecreaseMinesCommand}"
                FontWeight="Bold" />

              <Border
                Grid.Column="1"
                Margin="10,0,10,0"
                Padding="5"
                CornerRadius="5"
                Style="{StaticResource BorderRegion}">
                <TextBlock
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  FontSize="15"
                  FontWeight="Bold"
                  Text="{Binding NumberOfMines}" />
              </Border>

              <Button
                Grid.Column="2"
                Height="32"
                hc:BorderElement.CornerRadius="8"
                hc:IconElement.Geometry="{StaticResource AddGeometry}"
                hc:IconElement.Width="15"
                BorderBrush="Transparent"
                Command="{Binding IncreaseMinesCommand}"
                FontWeight="Bold" />
            </Grid>

          </StackPanel>

          <!--  Probability Info  -->
          <StackPanel
            Grid.Row="1"
            Margin="0,0,0,30"
            HorizontalAlignment="Left">
            <TextBlock
              HorizontalAlignment="Left"
              FontSize="13"
              TextAlignment="Center"
              TextWrapping="Wrap">

              <Run Foreground="{DynamicResource SecondaryTextBrush}" Text="Você receberá " />
              <Run
                FontWeight="Bold"
                Foreground="{DynamicResource SuccessBrush}"
                Text="{Binding MultiplierText}" />
              <Run Foreground="{DynamicResource SecondaryTextBrush}" Text=" por tile, probabilidade de ganhar: " />
              <Run
                FontWeight="Bold"
                Foreground="{DynamicResource SuccessBrush}"
                Text="{Binding ProbabilityPercentText}" />
            </TextBlock>
          </StackPanel>

          <!--  Bet Amount  -->
          <TextBlock
            Margin="0,0,0,15"
            FontSize="18"
            FontWeight="Bold"
            Text="Valor da Aposta" />

          <TextBox
            Name="BetAmountTextBox"
            Margin="0,0,0,15"
            Padding="15,12"
            hc:BorderElement.CornerRadius="8"
            BorderThickness="1"
            FontSize="16"
            Text="{Binding BetAmount, UpdateSourceTrigger=PropertyChanged}" />

          <TextBlock
            Margin="0,0,0,20"
            FontSize="13"
            Foreground="{DynamicResource SecondaryTextBrush}"
            Text="{Binding MaxBetText}" />

          <!--  Quick Bet Buttons  -->
          <Grid Margin="0,0,0,30">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Button
              Grid.Column="0"
              Width="80"
              Margin="0,0,5,0"
              hc:BorderElement.CornerRadius="8"
              Background="#1f1f1f"
              BorderBrush="#404040"
              BorderThickness="1"
              Command="{Binding SetBetPercentageCommand}"
              CommandParameter="25"
              Content="25%" />

            <Button
              Grid.Column="1"
              Width="80"
              Margin="5,0"
              hc:BorderElement.CornerRadius="8"
              Command="{Binding SetBetPercentageCommand}"
              CommandParameter="50"
              Content="50%" />

            <Button
              Grid.Column="2"
              Width="80"
              Margin="5,0"
              hc:BorderElement.CornerRadius="8"
              Command="{Binding SetBetPercentageCommand}"
              CommandParameter="75"
              Content="75%" />

            <Button
              Grid.Column="3"
              Width="80"
              Margin="5,0,0,0"
              hc:BorderElement.CornerRadius="8"
              Command="{Binding SetBetPercentageCommand}"
              CommandParameter="100"
              Content="Máx" />

          </Grid>

          <!--  Note  -->
          <TextBlock
            Margin="0,0,0,25"
            FontSize="13"
            Foreground="{DynamicResource SecondaryTextBrush}"
            Text="Nota: O pagamento máximo por jogo é limitado a R$ 2.000.000."
            TextWrapping="Wrap" />

          <!--  Unified Action Button  -->
          <Button
            Height="50"
            HorizontalAlignment="Stretch"
            hc:BorderElement.CornerRadius="8"
            BorderThickness="0"
            Command="{Binding MainActionCommand}"
            FontSize="18"
            FontWeight="Bold"
            IsEnabled="{Binding IsMainActionEnabled}">
            <Button.Style>
              <Style BasedOn="{StaticResource ButtonDefault}" TargetType="Button">
                <Setter Property="Background" Value="#666666" />
                <Style.Triggers>
                  <!--  Estado: Pode iniciar jogo  -->
                  <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                      <Condition Binding="{Binding CanStartGame}" Value="True" />
                      <Condition Binding="{Binding IsGameActive}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource DangerBrush}" />
                  </MultiDataTrigger>
                  <!--  Estado: Pode sacar ganhos  -->
                  <DataTrigger Binding="{Binding CanCollectWinnings}" Value="True">
                    <Setter Property="Background" Value="{DynamicResource SuccessBrush}" />
                  </DataTrigger>
                  <!--  Estado: Game Over (perdeu)  -->
                  <DataTrigger Binding="{Binding GameStatus}" Value="PERDEU">
                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </Button.Style>
            <TextBlock Text="{Binding MainActionButtonText}" />
          </Button>

          <!--  Result Card  -->
          <Border
            Margin="0,15,0,0"
            Padding="20"
            CornerRadius="12"
            Visibility="{Binding ShowResultCard, Converter={StaticResource Boolean2VisibilityConverter}}">
            <Border.Style>
              <Style BasedOn="{StaticResource BorderRegion}" TargetType="Border">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding IsResultPositive}" Value="True">
                    <Setter Property="Background" Value="#1a4d3a" />
                    <Setter Property="BorderBrush" Value="{DynamicResource SuccessBrush}" />
                    <Setter Property="BorderThickness" Value="1" />
                  </DataTrigger>
                  <DataTrigger Binding="{Binding IsResultPositive}" Value="False">
                    <Setter Property="Background" Value="#4d1a1a" />
                    <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                    <Setter Property="BorderThickness" Value="1" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </Border.Style>

            <StackPanel>
              <!--  Card Header  -->
              <Grid Margin="0,0,0,10">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!--  Icon  -->
                <Border
                  Grid.Column="0"
                  Width="8"
                  Height="8"
                  Margin="0,0,8,0"
                  CornerRadius="4">
                  <Border.Style>
                    <Style TargetType="Border">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsResultPositive}" Value="True">
                          <Setter Property="Background" Value="{DynamicResource SuccessBrush}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsResultPositive}" Value="False">
                          <Setter Property="Background" Value="{DynamicResource DangerBrush}" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </Border.Style>
                </Border>

                <!--  Title  -->
                <TextBlock
                  Grid.Column="1"
                  VerticalAlignment="Center"
                  FontWeight="Bold"
                  Text="{Binding ResultCardTitle}">
                  <TextBlock.Style>
                    <Style BasedOn="{StaticResource TextBlockDefaultBold}" TargetType="TextBlock">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsResultPositive}" Value="True">
                          <Setter Property="Foreground" Value="{DynamicResource SuccessBrush}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsResultPositive}" Value="False">
                          <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </TextBlock.Style>
                </TextBlock>

                <!--  Amount  -->
                <TextBlock
                  Grid.Column="2"
                  VerticalAlignment="Center"
                  FontSize="16"
                  FontWeight="Bold"
                  Text="{Binding ResultCardAmount}">
                  <TextBlock.Style>
                    <Style BasedOn="{StaticResource TextBlockDefaultBold}" TargetType="TextBlock">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsResultPositive}" Value="True">
                          <Setter Property="Foreground" Value="{DynamicResource SuccessBrush}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsResultPositive}" Value="False">
                          <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </TextBlock.Style>
                </TextBlock>
              </Grid>

              <!--  Description  -->
              <TextBlock
                FontSize="13"
                Foreground="{DynamicResource SecondaryTextBrush}"
                Text="{Binding ResultCardDescription}"
                TextWrapping="Wrap" />
            </StackPanel>
          </Border>

        </StackPanel>

      </Grid>
    </Border>
  </Grid>
</UserControl>