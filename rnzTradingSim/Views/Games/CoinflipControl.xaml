<UserControl
  x:Class="rnzTradingSim.Views.Games.CoinflipControl"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:hc="https://handyorg.github.io/handycontrol"
  xmlns:local="clr-namespace:rnzTradingSim"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  d:DesignHeight="600"
  d:DesignWidth="400"
  mc:Ignorable="d">

  <Grid>
    <StackPanel Margin="20">
      <!--  Game Description  -->
      <TextBlock
        Margin="0,0,0,15"
        HorizontalAlignment="Center"
        FontSize="14"
        Foreground="{DynamicResource SecondaryTextBrush}"
        Text="Choose heads or tails and double your money!"
        TextWrapping="Wrap" />

      <!--  Session Balance Display  -->
      <hc:Card
        Margin="0,0,0,20"
        Padding="15"
        Background="{DynamicResource SecondaryRegionBrush}">
        <StackPanel HorizontalAlignment="Center">
          <TextBlock
            HorizontalAlignment="Center"
            FontSize="12"
            Foreground="{DynamicResource SecondaryTextBrush}"
            Text="Session P&amp;L" />
          <TextBlock
            HorizontalAlignment="Center"
            FontSize="24"
            FontWeight="Bold"
            Foreground="{Binding SessionBalance, Converter={x:Static local:Converters.ProfitLossToColorConverter}}"
            Text="{Binding SessionBalance, StringFormat='{}{0:+$#,0.00;-$#,0.00;$0.00}'}" />
        </StackPanel>
      </hc:Card>

      <!--  Coin Animation Area  -->
      <Border
        Height="200"
        Margin="0,0,0,20"
        Background="{DynamicResource RegionBrush}"
        BorderBrush="{DynamicResource PrimaryBrush}"
        BorderThickness="2"
        CornerRadius="15">
        <Grid>
          <!--  Moeda com animação sincronizada com o resultado  -->
          <ContentControl
            Width="130"
            Height="130"
            HorizontalAlignment="Center"
            VerticalAlignment="Center">
            <ContentControl.Template>
              <ControlTemplate TargetType="ContentControl">
                <ControlTemplate.Resources>
                  <!--  Storyboard para mostrar TAILS (equivale ao StoryboardChecked)  -->
                  <Storyboard x:Key="StoryboardShowTails">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TailsElement" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <PowerEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeadsElement" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <PowerEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TailsElement" Storyboard.TargetProperty="Opacity">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <PowerEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeadsElement" Storyboard.TargetProperty="Opacity">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <PowerEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>

                  <!--  Storyboard para mostrar HEADS (equivale ao StoryboardUnChecked)  -->
                  <Storyboard x:Key="StoryboardShowHeads">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TailsElement" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <PowerEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeadsElement" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <PowerEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TailsElement" Storyboard.TargetProperty="Opacity">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <PowerEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeadsElement" Storyboard.TargetProperty="Opacity">
                      <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                          <PowerEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                      </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>

                  <!--  Storyboard para animação completa do flip com resultado dinâmico  -->
                  <Storyboard x:Key="CoinFlipAnimation">
                    <!--  Sequência de flips rápidos durante os primeiros 1.6 segundos  -->
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Tag">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="HEADS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="TAILS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="HEADS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="TAILS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.8" Value="HEADS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:1.0" Value="TAILS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:1.2" Value="HEADS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:1.4" Value="TAILS" />
                      <!--  Nos últimos 0.4 segundos, usar o FinalResult binding  -->
                      <DiscreteObjectKeyFrame KeyTime="0:0:1.6" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.FinalResult}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>

                  <!--  Storyboard alternativo que termina no resultado correto  -->
                  <Storyboard x:Key="CoinFlipToHeads">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Tag">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="HEADS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="TAILS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="HEADS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="TAILS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.8" Value="HEADS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:1.0" Value="TAILS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:1.2" Value="HEADS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:1.4" Value="TAILS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:1.6" Value="HEADS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:1.8" Value="HEADS" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>

                  <Storyboard x:Key="CoinFlipToTails">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Tag">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="HEADS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="TAILS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="HEADS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="TAILS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:0.8" Value="HEADS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:1.0" Value="TAILS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:1.2" Value="HEADS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:1.4" Value="TAILS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:1.6" Value="HEADS" />
                      <DiscreteObjectKeyFrame KeyTime="0:0:1.8" Value="TAILS" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </ControlTemplate.Resources>

                <Grid>
                  <!--  HEADS Element (UnCheckedElement equivalente)  -->
                  <Border
                    Name="HeadsElement"
                    RenderTransformOrigin="0.5,0.5"
                    SnapsToDevicePixels="true">
                    <Border.RenderTransform>
                      <TransformGroup>
                        <ScaleTransform ScaleX="1" />
                      </TransformGroup>
                    </Border.RenderTransform>

                    <Grid>
                      <Ellipse
                        Fill="#FFD700"
                        Stroke="#FFA500"
                        StrokeThickness="4">
                        <Ellipse.Effect>
                          <DropShadowEffect
                            BlurRadius="20"
                            Opacity="0.7"
                            ShadowDepth="3"
                            Color="Orange" />
                        </Ellipse.Effect>
                      </Ellipse>

                      <Ellipse
                        Margin="10"
                        Fill="Transparent"
                        Stroke="#CC8400"
                        StrokeThickness="2" />

                      <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="18"
                        FontWeight="Bold"
                        Foreground="#8B4513"
                        Text="HEADS" />
                    </Grid>
                  </Border>

                  <!--  TAILS Element (CheckedElement equivalente)  -->
                  <Border
                    Name="TailsElement"
                    RenderTransformOrigin="0.5,0.5"
                    SnapsToDevicePixels="true">
                    <Border.RenderTransform>
                      <TransformGroup>
                        <ScaleTransform ScaleX="0" />
                      </TransformGroup>
                    </Border.RenderTransform>

                    <Grid>
                      <Ellipse
                        Fill="#C0C0C0"
                        Stroke="#808080"
                        StrokeThickness="4">
                        <Ellipse.Effect>
                          <DropShadowEffect
                            BlurRadius="20"
                            Opacity="0.7"
                            ShadowDepth="3"
                            Color="Gray" />
                        </Ellipse.Effect>
                      </Ellipse>

                      <Ellipse
                        Margin="10"
                        Fill="Transparent"
                        Stroke="#606060"
                        StrokeThickness="2" />

                      <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="18"
                        FontWeight="Bold"
                        Foreground="#404040"
                        Text="TAILS" />
                    </Grid>
                  </Border>
                </Grid>

                <ControlTemplate.Triggers>
                  <!--  Trigger principal para animação quando IsFlipping = True  -->
                  <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                      <Condition Binding="{Binding IsFlipping}" Value="True" />
                      <Condition Binding="{Binding FinalResult}" Value="HEADS" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                      <BeginStoryboard Storyboard="{StaticResource CoinFlipToHeads}" />
                    </MultiDataTrigger.EnterActions>
                  </MultiDataTrigger>

                  <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                      <Condition Binding="{Binding IsFlipping}" Value="True" />
                      <Condition Binding="{Binding FinalResult}" Value="TAILS" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                      <BeginStoryboard Storyboard="{StaticResource CoinFlipToTails}" />
                    </MultiDataTrigger.EnterActions>
                  </MultiDataTrigger>

                  <!--  Triggers para alternar entre HEADS e TAILS baseado na Tag  -->
                  <Trigger Property="Tag" Value="TAILS">
                    <Trigger.EnterActions>
                      <BeginStoryboard Storyboard="{StaticResource StoryboardShowTails}" />
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                      <BeginStoryboard Storyboard="{StaticResource StoryboardShowHeads}" />
                    </Trigger.ExitActions>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </ContentControl.Template>
          </ContentControl>

          <!--  Loading indicator when flipping  -->
          <hc:LoadingCircle
            Width="160"
            Height="160"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            IsRunning="{Binding IsFlipping}"
            Opacity="0.2"
            Visibility="{Binding IsFlipping, Converter={StaticResource Boolean2VisibilityConverter}}" />
        </Grid>
      </Border>

      <!--  Side Selection  -->
      <StackPanel Margin="0,0,0,20">
        <TextBlock
          Margin="0,0,0,10"
          HorizontalAlignment="Center"
          FontSize="14"
          FontWeight="Bold"
          Text="Choose Side" />

        <hc:UniformSpacingPanel Orientation="Horizontal" Spacing="15">
          <Button
            Width="120"
            Height="50"
            Background="{Binding SelectedSide, Converter={x:Static local:Converters.CoinflipSideToColorConverter}, ConverterParameter=HEADS}"
            Command="{Binding SelectSideCommand}"
            CommandParameter="HEADS"
            Content="🟡 HEADS"
            FontSize="14"
            FontWeight="Bold"
            Foreground="White"
            Style="{StaticResource ButtonSuccess}" />

          <Button
            Width="120"
            Height="50"
            Background="{Binding SelectedSide, Converter={x:Static local:Converters.CoinflipSideToColorConverter}, ConverterParameter=TAILS}"
            Command="{Binding SelectSideCommand}"
            CommandParameter="TAILS"
            Content="⚫ TAILS"
            FontSize="14"
            FontWeight="Bold"
            Foreground="White"
            Style="{StaticResource ButtonSuccess}" />
        </hc:UniformSpacingPanel>
      </StackPanel>

      <!--  Bet Amount  -->
      <StackPanel Margin="0,0,0,20">
        <TextBlock
          Margin="0,0,0,10"
          HorizontalAlignment="Center"
          FontSize="14"
          FontWeight="Bold"
          Text="Bet Amount" />

        <hc:NumericUpDown
          Height="45"
          Maximum="10000"
          Minimum="1"
          Style="{StaticResource NumericUpDownExtend}"
          Value="{Binding BetAmount}" />

        <!--  Quick Bet Buttons  -->
        <hc:UniformSpacingPanel
          Margin="0,10,0,0"
          Orientation="Horizontal"
          Spacing="10">
          <Button
            Width="60"
            Height="30"
            Command="{Binding SetBetPercentageCommand}"
            CommandParameter="0.25"
            Content="25%"
            FontSize="11"
            Style="{StaticResource ButtonDefault}" />
          <Button
            Width="60"
            Height="30"
            Command="{Binding SetBetPercentageCommand}"
            CommandParameter="0.50"
            Content="50%"
            FontSize="11"
            Style="{StaticResource ButtonDefault}" />
          <Button
            Width="60"
            Height="30"
            Command="{Binding SetBetPercentageCommand}"
            CommandParameter="0.75"
            Content="75%"
            FontSize="11"
            Style="{StaticResource ButtonDefault}" />
          <Button
            Width="60"
            Height="30"
            Command="{Binding SetBetPercentageCommand}"
            CommandParameter="1.0"
            Content="Max"
            FontSize="11"
            Style="{StaticResource ButtonDefault}" />
        </hc:UniformSpacingPanel>
      </StackPanel>

      <!--  Flip Button  -->
      <Button
        Height="55"
        Background="{DynamicResource PrimaryBrush}"
        Command="{Binding FlipCommand}"
        Content="{Binding IsFlipping, Converter={x:Static local:Converters.FlipButtonTextConverter}}"
        FontSize="16"
        FontWeight="Bold"
        Foreground="White"
        IsEnabled="{Binding IsFlipping, Converter={x:Static local:Converters.InverseBooleanConverter}}"
        Style="{StaticResource ButtonPrimary}" />
    </StackPanel>
  </Grid>
</UserControl>