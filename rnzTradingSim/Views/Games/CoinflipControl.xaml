<UserControl
  x:Class="rnzTradingSim.Views.Games.CoinflipControl"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:hc="https://handyorg.github.io/handycontrol"
  xmlns:local="clr-namespace:rnzTradingSim"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  d:DesignHeight="450"
  d:DesignWidth="850"
  mc:Ignorable="d">

  <UserControl.Resources>
    <!--  Storyboard para quando está flipando (animação contínua)  -->
    <Storyboard x:Key="StoryboardFlipping" RepeatBehavior="Forever">
      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeadsElement" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
        <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0">
          <EasingDoubleKeyFrame.EasingFunction>
            <PowerEase EasingMode="EaseOut" />
          </EasingDoubleKeyFrame.EasingFunction>
        </EasingDoubleKeyFrame>
        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
          <EasingDoubleKeyFrame.EasingFunction>
            <PowerEase EasingMode="EaseOut" />
          </EasingDoubleKeyFrame.EasingFunction>
        </EasingDoubleKeyFrame>
      </DoubleAnimationUsingKeyFrames>
      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TailsElement" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
        <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1">
          <EasingDoubleKeyFrame.EasingFunction>
            <PowerEase EasingMode="EaseOut" />
          </EasingDoubleKeyFrame.EasingFunction>
        </EasingDoubleKeyFrame>
        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
          <EasingDoubleKeyFrame.EasingFunction>
            <PowerEase EasingMode="EaseOut" />
          </EasingDoubleKeyFrame.EasingFunction>
        </EasingDoubleKeyFrame>
      </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <!--  Storyboard para mostrar HEADS  -->
    <Storyboard x:Key="StoryboardShowHeads">
      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeadsElement" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
          <EasingDoubleKeyFrame.EasingFunction>
            <BackEase Amplitude="0.3" EasingMode="EaseOut" />
          </EasingDoubleKeyFrame.EasingFunction>
        </EasingDoubleKeyFrame>
      </DoubleAnimationUsingKeyFrames>
      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TailsElement" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
          <EasingDoubleKeyFrame.EasingFunction>
            <BackEase Amplitude="0.3" EasingMode="EaseOut" />
          </EasingDoubleKeyFrame.EasingFunction>
        </EasingDoubleKeyFrame>
      </DoubleAnimationUsingKeyFrames>
      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeadsElement" Storyboard.TargetProperty="Opacity">
        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
          <EasingDoubleKeyFrame.EasingFunction>
            <PowerEase EasingMode="EaseOut" />
          </EasingDoubleKeyFrame.EasingFunction>
        </EasingDoubleKeyFrame>
      </DoubleAnimationUsingKeyFrames>
      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TailsElement" Storyboard.TargetProperty="Opacity">
        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
          <EasingDoubleKeyFrame.EasingFunction>
            <PowerEase EasingMode="EaseOut" />
          </EasingDoubleKeyFrame.EasingFunction>
        </EasingDoubleKeyFrame>
      </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <!--  Storyboard para mostrar TAILS  -->
    <Storyboard x:Key="StoryboardShowTails">
      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeadsElement" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
          <EasingDoubleKeyFrame.EasingFunction>
            <BackEase Amplitude="0.3" EasingMode="EaseOut" />
          </EasingDoubleKeyFrame.EasingFunction>
        </EasingDoubleKeyFrame>
      </DoubleAnimationUsingKeyFrames>
      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TailsElement" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
          <EasingDoubleKeyFrame.EasingFunction>
            <BackEase Amplitude="0.3" EasingMode="EaseOut" />
          </EasingDoubleKeyFrame.EasingFunction>
        </EasingDoubleKeyFrame>
      </DoubleAnimationUsingKeyFrames>
      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeadsElement" Storyboard.TargetProperty="Opacity">
        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
          <EasingDoubleKeyFrame.EasingFunction>
            <PowerEase EasingMode="EaseOut" />
          </EasingDoubleKeyFrame.EasingFunction>
        </EasingDoubleKeyFrame>
      </DoubleAnimationUsingKeyFrames>
      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TailsElement" Storyboard.TargetProperty="Opacity">
        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
          <EasingDoubleKeyFrame.EasingFunction>
            <PowerEase EasingMode="EaseOut" />
          </EasingDoubleKeyFrame.EasingFunction>
        </EasingDoubleKeyFrame>
      </DoubleAnimationUsingKeyFrames>
    </Storyboard>
  </UserControl.Resources>



  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="1*" />
      <ColumnDefinition Width="1*" />
    </Grid.ColumnDefinitions>

    <!--  Left Side - Coin and Session  -->
    <StackPanel Grid.Column="0" VerticalAlignment="Center">
      <!--  Session Balance  -->
      <StackPanel Margin="0,0,0,30" HorizontalAlignment="Center">
        <TextBlock HorizontalAlignment="Center" Text="Session P&amp;L" />
        <TextBlock
          HorizontalAlignment="Center"
          FontWeight="Bold"
          Text="{Binding SessionBalance, StringFormat='{}{0:+$#,0.00;-$#,0.00;$0.00}'}" />
      </StackPanel>

      <!--  Container da moeda  -->
      <Grid
        Width="150"
        Height="150"
        HorizontalAlignment="Center">

        <hc:SimplePanel Width="120" Height="120">
          <!--  HEADS side (Azul)  -->
          <Border
            Name="HeadsElement"
            Width="100"
            Height="100"
            Background="RoyalBlue"
            BorderBrush="DarkBlue"
            BorderThickness="3"
            CornerRadius="50"
            RenderTransformOrigin="0.5,0.5"
            SnapsToDevicePixels="True">
            <Border.RenderTransform>
              <TransformGroup>
                <ScaleTransform ScaleX="1" />
              </TransformGroup>
            </Border.RenderTransform>
          </Border>

          <!--  TAILS side (Vermelho)  -->
          <Border
            Name="TailsElement"
            Width="100"
            Height="100"
            Background="Crimson"
            BorderBrush="DarkRed"
            BorderThickness="3"
            CornerRadius="50"
            RenderTransformOrigin="0.5,0.5"
            SnapsToDevicePixels="True">
            <Border.RenderTransform>
              <TransformGroup>
                <ScaleTransform ScaleX="0" />
              </TransformGroup>
            </Border.RenderTransform>
          </Border>
        </hc:SimplePanel>
      </Grid>
    </StackPanel>

    <!--  Right Side - Controls  -->
    <StackPanel
      Grid.Column="1"
      Margin="30,0,0,0"
      VerticalAlignment="Center">

      <!--  Choose Side  -->
      <StackPanel Margin="0,0,0,30">
        <TextBlock
          Margin="0,0,0,10"
          FontWeight="Bold"
          Text="Choose Side" />

        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>

          <Button
            Grid.Column="0"
            Margin="0,0,5,0"
            Background="{Binding SelectedSide, Converter={x:Static local:Converters.CoinflipSideToColorConverter}, ConverterParameter=HEADS}"
            Command="{Binding SelectSideCommand}"
            CommandParameter="HEADS"
            Content="HEADS"
            FontWeight="Bold" />

          <Button
            Grid.Column="1"
            Margin="5,0,0,0"
            Background="{Binding SelectedSide, Converter={x:Static local:Converters.CoinflipSideToColorConverter}, ConverterParameter=TAILS}"
            Command="{Binding SelectSideCommand}"
            CommandParameter="TAILS"
            Content="TAILS"
            FontWeight="Bold" />
        </Grid>
      </StackPanel>

      <!--  Bet Amount  -->
      <StackPanel Margin="0,0,0,30">
        <TextBlock
          Margin="0,0,0,10"
          FontWeight="Bold"
          Text="Bet Amount" />

        <hc:NumericUpDown
          Maximum="10000"
          Minimum="1"
          Value="{Binding BetAmount}" />

        <TextBlock Margin="0,5,0,0" Text="{Binding ParentBalance, StringFormat='Max bet: ${0:N0}'}" />

        <!--  Quick Bet Buttons  -->
        <Grid Margin="0,10,0,0">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>

          <Button
            Grid.Column="0"
            Margin="0,0,2,0"
            Command="{Binding SetBetPercentageCommand}"
            CommandParameter="0.25"
            Content="25%" />
          <Button
            Grid.Column="1"
            Margin="2,0,2,0"
            Command="{Binding SetBetPercentageCommand}"
            CommandParameter="0.50"
            Content="50%" />
          <Button
            Grid.Column="2"
            Margin="2,0,2,0"
            Command="{Binding SetBetPercentageCommand}"
            CommandParameter="0.75"
            Content="75%" />
          <Button
            Grid.Column="3"
            Margin="2,0,0,0"
            Command="{Binding SetBetPercentageCommand}"
            CommandParameter="1.0"
            Content="Max" />
        </Grid>
      </StackPanel>

      <!--  Flip Button  -->
      <Button
        Height="50"
        Command="{Binding FlipCommand}"
        Content="{Binding IsFlipping, Converter={x:Static local:Converters.FlipButtonTextConverter}}"
        FontSize="16"
        FontWeight="Bold"
        IsEnabled="{Binding IsFlipping, Converter={x:Static local:Converters.InverseBooleanConverter}}" />
    </StackPanel>
  </Grid>
</UserControl>