<UserControl
  x:Class="rnzTradingSim.Views.Games.CoinflipControl"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:hc="https://handyorg.github.io/handycontrol"
  xmlns:local="clr-namespace:rnzTradingSim"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  d:DesignHeight="600"
  d:DesignWidth="400"
  mc:Ignorable="d">

  <Grid>
    <StackPanel Margin="20">
      <!--  Game Description  -->
      <TextBlock
        Margin="0,0,0,15"
        HorizontalAlignment="Center"
        FontSize="14"
        Foreground="{DynamicResource SecondaryTextBrush}"
        Text="Choose heads or tails and double your money!"
        TextWrapping="Wrap" />

      <!--  Balance Display  -->
      <hc:Card
        Margin="0,0,0,20"
        Padding="15"
        Background="{DynamicResource SecondaryRegionBrush}">
        <StackPanel HorizontalAlignment="Center">
          <TextBlock
            HorizontalAlignment="Center"
            FontSize="12"
            Foreground="{DynamicResource SecondaryTextBrush}"
            Text="Balance" />
          <TextBlock
            HorizontalAlignment="Center"
            FontSize="24"
            FontWeight="Bold"
            Foreground="{DynamicResource SuccessBrush}"
            Text="{Binding Balance, StringFormat='${0:N2}'}" />
        </StackPanel>
      </hc:Card>

      <!--  Coin Animation Area  -->
      <Border
        Height="200"
        Margin="0,0,0,20"
        Background="{DynamicResource RegionBrush}"
        BorderBrush="{DynamicResource PrimaryBrush}"
        BorderThickness="2"
        CornerRadius="15">
        <Grid>
          <!--  Container da moeda  -->
          <Grid
            Width="130"
            Height="130"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
              <TransformGroup>
                <RotateTransform Angle="0" />
                <TranslateTransform X="0" Y="0" />
                <ScaleTransform ScaleX="1" ScaleY="1" />
              </TransformGroup>
            </Grid.RenderTransform>

            <!--  HEADS Side (Dourado)  -->
            <Grid>
              <Ellipse
                Fill="#FFD700"
                Stroke="#FFA500"
                StrokeThickness="4">
                <Ellipse.Effect>
                  <DropShadowEffect
                    BlurRadius="20"
                    Opacity="0.7"
                    ShadowDepth="3"
                    Color="Orange" />
                </Ellipse.Effect>
              </Ellipse>

              <Ellipse
                Margin="10"
                Fill="Transparent"
                Stroke="#CC8400"
                StrokeThickness="2" />

              <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="18"
                FontWeight="Bold"
                Foreground="#8B4513"
                Text="HEADS">
                <TextBlock.Style>
                  <Style TargetType="TextBlock">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsFlipping}" Value="True">
                        <DataTrigger.EnterActions>
                          <BeginStoryboard>
                            <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.075" Value="0" />
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.225" Value="1" />
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.375" Value="0" />
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.525" Value="1" />
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.675" Value="0" />
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.825" Value="1" />
                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.975" Value="0" />
                                <DiscreteDoubleKeyFrame KeyTime="0:0:1.125" Value="1" />
                                <DiscreteDoubleKeyFrame KeyTime="0:0:1.275" Value="0" />
                                <DiscreteDoubleKeyFrame KeyTime="0:0:1.425" Value="1" />
                                <DiscreteDoubleKeyFrame KeyTime="0:0:1.8" Value="1" />
                              </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                          </BeginStoryboard>
                        </DataTrigger.EnterActions>
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </TextBlock.Style>
              </TextBlock>
            </Grid>

            <!--  TAILS Side (Prateado) - sobreposição  -->
            <Grid Opacity="0">
              <Ellipse
                Fill="#C0C0C0"
                Stroke="#808080"
                StrokeThickness="4">
                <Ellipse.Effect>
                  <DropShadowEffect
                    BlurRadius="20"
                    Opacity="0.7"
                    ShadowDepth="3"
                    Color="Gray" />
                </Ellipse.Effect>
              </Ellipse>

              <Ellipse
                Margin="10"
                Fill="Transparent"
                Stroke="#606060"
                StrokeThickness="2" />

              <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="18"
                FontWeight="Bold"
                Foreground="#404040"
                Text="TAILS" />

              <Grid.Style>
                <Style TargetType="Grid">
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding IsFlipping}" Value="True">
                      <DataTrigger.EnterActions>
                        <BeginStoryboard>
                          <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                              <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                              <DiscreteDoubleKeyFrame KeyTime="0:0:0.075" Value="1" />
                              <DiscreteDoubleKeyFrame KeyTime="0:0:0.225" Value="0" />
                              <DiscreteDoubleKeyFrame KeyTime="0:0:0.375" Value="1" />
                              <DiscreteDoubleKeyFrame KeyTime="0:0:0.525" Value="0" />
                              <DiscreteDoubleKeyFrame KeyTime="0:0:0.675" Value="1" />
                              <DiscreteDoubleKeyFrame KeyTime="0:0:0.825" Value="0" />
                              <DiscreteDoubleKeyFrame KeyTime="0:0:0.975" Value="1" />
                              <DiscreteDoubleKeyFrame KeyTime="0:0:1.125" Value="0" />
                              <DiscreteDoubleKeyFrame KeyTime="0:0:1.275" Value="1" />
                              <DiscreteDoubleKeyFrame KeyTime="0:0:1.425" Value="0" />
                              <DiscreteDoubleKeyFrame KeyTime="0:0:1.8" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                          </Storyboard>
                        </BeginStoryboard>
                      </DataTrigger.EnterActions>
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </Grid.Style>
            </Grid>

            <!--  Animações do container principal  -->
            <Grid.Style>
              <Style TargetType="Grid">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding IsFlipping}" Value="True">
                    <DataTrigger.EnterActions>
                      <BeginStoryboard>
                        <Storyboard>
                          <!--  Rotação da moeda inteira  -->
                          <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)">
                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                            <EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="1080">
                              <EasingDoubleKeyFrame.EasingFunction>
                                <QuadraticEase EasingMode="EaseOut" />
                              </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                          </DoubleAnimationUsingKeyFrames>

                          <!--  Movimento vertical  -->
                          <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.Y)">
                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-40">
                              <EasingDoubleKeyFrame.EasingFunction>
                                <QuadraticEase EasingMode="EaseOut" />
                              </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                            <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="-25" />
                            <EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="0">
                              <EasingDoubleKeyFrame.EasingFunction>
                                <BounceEase EasingMode="EaseOut" />
                              </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                          </DoubleAnimationUsingKeyFrames>

                          <!--  Flip para mostrar os dois lados  -->
                          <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(ScaleTransform.ScaleX)">
                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0.1" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-0.1" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.45" Value="0.1" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="-0.1" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.75" Value="0.1" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="-0.1" />
                            <EasingDoubleKeyFrame KeyTime="0:0:1.05" Value="0.1" />
                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="-0.1" />
                            <EasingDoubleKeyFrame KeyTime="0:0:1.35" Value="0.1" />
                            <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="-0.1" />
                            <EasingDoubleKeyFrame KeyTime="0:0:1.65" Value="0.5" />
                            <EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="1">
                              <EasingDoubleKeyFrame.EasingFunction>
                                <QuadraticEase EasingMode="EaseOut" />
                              </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                          </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                      </BeginStoryboard>
                    </DataTrigger.EnterActions>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </Grid.Style>
          </Grid>

          <!--  Loading indicator when flipping  -->
          <hc:LoadingCircle
            Width="160"
            Height="160"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            IsRunning="{Binding IsFlipping}"
            Opacity="0.2"
            Visibility="{Binding IsFlipping, Converter={StaticResource Boolean2VisibilityConverter}}" />
        </Grid>
      </Border>

      <!--  Side Selection  -->
      <StackPanel Margin="0,0,0,20">
        <TextBlock
          Margin="0,0,0,10"
          HorizontalAlignment="Center"
          FontSize="14"
          FontWeight="Bold"
          Text="Choose Side" />

        <hc:UniformSpacingPanel Orientation="Horizontal" Spacing="15">
          <Button
            Width="120"
            Height="50"
            Background="{Binding SelectedSide, Converter={x:Static local:Converters.CoinflipSideToColorConverter}, ConverterParameter=HEADS}"
            Command="{Binding SelectSideCommand}"
            CommandParameter="HEADS"
            Content="🟡 HEADS"
            FontSize="14"
            FontWeight="Bold"
            Foreground="White"
            Style="{StaticResource ButtonSuccess}" />

          <Button
            Width="120"
            Height="50"
            Background="{Binding SelectedSide, Converter={x:Static local:Converters.CoinflipSideToColorConverter}, ConverterParameter=TAILS}"
            Command="{Binding SelectSideCommand}"
            CommandParameter="TAILS"
            Content="⚫ TAILS"
            FontSize="14"
            FontWeight="Bold"
            Foreground="White"
            Style="{StaticResource ButtonSuccess}" />
        </hc:UniformSpacingPanel>
      </StackPanel>

      <!--  Bet Amount  -->
      <StackPanel Margin="0,0,0,20">
        <TextBlock
          Margin="0,0,0,10"
          HorizontalAlignment="Center"
          FontSize="14"
          FontWeight="Bold"
          Text="Bet Amount" />

        <hc:NumericUpDown
          Height="45"
          Maximum="10000"
          Minimum="1"
          Style="{StaticResource NumericUpDownExtend}"
          Value="{Binding BetAmount}" />

        <!--  Quick Bet Buttons  -->
        <hc:UniformSpacingPanel
          Margin="0,10,0,0"
          Orientation="Horizontal"
          Spacing="10">
          <Button
            Width="60"
            Height="30"
            Command="{Binding SetBetPercentageCommand}"
            CommandParameter="0.25"
            Content="25%"
            FontSize="11"
            Style="{StaticResource ButtonDefault}" />
          <Button
            Width="60"
            Height="30"
            Command="{Binding SetBetPercentageCommand}"
            CommandParameter="0.50"
            Content="50%"
            FontSize="11"
            Style="{StaticResource ButtonDefault}" />
          <Button
            Width="60"
            Height="30"
            Command="{Binding SetBetPercentageCommand}"
            CommandParameter="0.75"
            Content="75%"
            FontSize="11"
            Style="{StaticResource ButtonDefault}" />
          <Button
            Width="60"
            Height="30"
            Command="{Binding SetBetPercentageCommand}"
            CommandParameter="1.0"
            Content="Max"
            FontSize="11"
            Style="{StaticResource ButtonDefault}" />
        </hc:UniformSpacingPanel>
      </StackPanel>

      <!--  Flip Button  -->
      <Button
        Height="55"
        Background="{DynamicResource PrimaryBrush}"
        Command="{Binding FlipCommand}"
        Content="{Binding IsFlipping, Converter={x:Static local:Converters.FlipButtonTextConverter}}"
        FontSize="16"
        FontWeight="Bold"
        Foreground="White"
        IsEnabled="{Binding IsFlipping, Converter={x:Static local:Converters.InverseBooleanConverter}}"
        Style="{StaticResource ButtonPrimary}" />
    </StackPanel>
  </Grid>
</UserControl>