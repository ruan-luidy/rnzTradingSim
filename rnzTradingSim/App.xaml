<Application
  x:Class="rnzTradingSim.App"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:hc="https://handyorg.github.io/handycontrol"
  xmlns:local="clr-namespace:rnzTradingSim"
  StartupUri="MainWindow.xaml">
  <Application.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <hc:Theme Skin="Dark" />
      </ResourceDictionary.MergedDictionaries>

      <!-- Converters necessários -->
      <local:String2VisibilityConverter x:Key="String2VisibilityConverter" />
      <local:Boolean2VisibilityConverter x:Key="Boolean2VisibilityConverter" />

      <!--  Cores personalizadas para o RugPlay  -->
      <SolidColorBrush x:Key="RugPlayPrimaryBrush" Color="#6366F1" />
      <SolidColorBrush x:Key="RugPlaySecondaryBrush" Color="#8B5CF6" />
      <SolidColorBrush x:Key="RugPlayDangerBrush" Color="#EF4444" />
      <SolidColorBrush x:Key="RugPlaySuccessBrush" Color="#10B981" />
      <SolidColorBrush x:Key="RugPlayWarningBrush" Color="#F59E0B" />

      <!--  Estilos personalizados para gambling/casino  -->
      <SolidColorBrush x:Key="GambleAccentBrush" Color="#FFD700" />
      <SolidColorBrush x:Key="GambleWinBrush" Color="#00FF7F" />
      <SolidColorBrush x:Key="GambleLossBrush" Color="#FF4500" />

      <!--  Override de algumas cores do HandyControl para combinar com o tema  -->
      <SolidColorBrush x:Key="PrimaryBrush" Color="#6366F1" />
      <SolidColorBrush x:Key="DarkPrimaryBrush" Color="#4F46E5" />
      <SolidColorBrush x:Key="DangerBrush" Color="#EF4444" />
      <SolidColorBrush x:Key="SuccessBrush" Color="#10B981" />
      <SolidColorBrush x:Key="WarningBrush" Color="#F59E0B" />
      <SolidColorBrush x:Key="InfoBrush" Color="#3B82F6" />

      <!--  Estilos globais para botões  -->
      <Style
        x:Key="ButtonPrimary"
        BasedOn="{StaticResource ButtonPrimary}"
        TargetType="Button">
        <Setter Property="Background" Value="{StaticResource RugPlayPrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource RugPlayPrimaryBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Bold" />
        <Style.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" Value="{StaticResource DarkPrimaryBrush}" />
          </Trigger>
        </Style.Triggers>
      </Style>

      <Style
        x:Key="ButtonDanger"
        BasedOn="{StaticResource ButtonDanger}"
        TargetType="Button">
        <Setter Property="Background" Value="{StaticResource RugPlayDangerBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource RugPlayDangerBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Bold" />
        <Style.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" Value="#DC2626" />
          </Trigger>
        </Style.Triggers>
      </Style>

      <Style x:Key="ButtonSuccess" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource RugPlaySuccessBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource RugPlaySuccessBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="Button">
              <Border
                x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding hc:BorderElement.CornerRadius}">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter TargetName="border" Property="Background" Value="#059669" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                  <Setter TargetName="border" Property="Background" Value="#047857" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter TargetName="border" Property="Opacity" Value="0.6" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <!--  Estilo personalizado para NumericUpDown  -->
      <Style
        x:Key="NumericUpDownGambling"
        BasedOn="{StaticResource NumericUpDownExtend}"
        TargetType="hc:NumericUpDown">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource RugPlayPrimaryBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Padding" Value="10,8" />
      </Style>

      <!--  Animações para elementos de gambling  -->
      <Storyboard x:Key="CoinFlipAnimation">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
          <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
          <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="180" />
          <EasingDoubleKeyFrame KeyTime="0:0:1" Value="360" />
          <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="540" />
          <EasingDoubleKeyFrame KeyTime="0:0:2" Value="720" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>

    </ResourceDictionary>
  </Application.Resources>
</Application>